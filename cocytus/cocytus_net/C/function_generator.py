import datetime
import os


class FunctionGenerator:
    def __init__(self, compiler, config, target_dir, template_dir):
        self.compiler = compiler
        self.config = config
        self.target_dir = target_dir
        self.template_dir = template_dir

    def get_config(self):
        """
        Keras Modelのコンフィグ情報を返す。
        :return:
        """
        return self.compiler.model.get_config()

    def generate(self):
        print('function generate')
        model_config = self.get_config()

        func_list = []

        for i, l in enumerate(model_config['layers']):
            class_name = l['class_name']
            config = l['config']
            name = config['name']
            layer_detal = self.compiler.get_cqt_layer_obj(name)

            func_name = layer_detal.make_func_name()
            if not func_name in func_list:
                print('generating int %s(CQT_LAYER *lp, void *inp, void *outp);' % func_name)
                if class_name == 'InputLayer':
                    self.generate_input_layer()

                func_list.append(func_name)

    def generate_input_layer(self):
        output_file = os.path.join(self.target_dir, 'cqt_lib', 'InputLayer.c')
        template_file = os.path.join(self.template_dir, 'InputLayer', 'InputLayer.c')

        self.convert(template_file, output_file)

        fpin = open(template_file, 'r')
        fpout = open(output_file, 'w')

        str = fpin.read()
        fpout.write(str)

    def wr_file_header(self):
        today = datetime.date.today()
        #self.fp.write("//----------------------------------------------------------------------------------------------------\n")
        #self.fp.write("// This file is automatically generated.\n")
        #self.fp.write("// %s\n" % today.strftime('%Y/%m/%d %H:%M:%S'))
        #self.fp.write("//----------------------------------------------------------------------------------------------------\n")


    def convert
